* Children을 사용하는 것은 일반적이지 않고 취약한 코드가 될 수 있습니다. 일반적으로 사용하는 대안을 살펴보세요.

Children을 사용해서 children prop로 받은 JSX를 조작하고 변환할 수 있습니다.

1. 레퍼런스
1.1. children.count(children) : children 데이터 구조의 자식 요소 수를 반환
1-1-1. 매개변수 
- children : 컴포넌트에서 받은 children prop의 값
1-1-2. 반환값 : children 내부 노드의 수

1.2. Children.forEach(children, fn, thisArg?) : children 데이터 구조의 모든 자식 요소에 대해 특정 코드를 실행
1-2-1. 매개변수 
- children : 컴포넌트에서 받은 children prop의 값
- fn : 배열의forEach 메서드 콜백처럼 각 자식 요소에서 실행할 함수
  자식 요소 - 첫 번째 인수, 인덱스 - 두 번째 인수
  인덱스는 0에서 시작해서 호출할 때마다 증가
- optional thisArg: fn 함수가 호출될 때 사용될 this의 값. 생략 시 undefined로 간주
1-2-2. 반환값 : Children.forEach는 undefined를 반환

1.3. Children.map(children, fn, thisArg?) : Children.map(children, fn, thisArg?)은 children 데이터 구조에서 각 자식 요소를 매핑하거나 변환
1-3-1. 매개변수
- children : 컴포넌트에서 받은 children prop의 값
- fn : 베열의 map 메서드 콜백같은 매핑 함수
  자식 요소 - 첫 번째 인수로, 인덱스 - 두 번째 인수
  인덱스는 0에서 시작해서 호출할 때마다 증가
  함수는 빈 노드(null, undefined 혹은 Boolean), 문자열, 숫자, React 엘리먼트 혹은 다른 React 노드의 배열과 같은 React 노드를 반환
- optional thisArg: fn 함수가 호출될 때 사용될 this의 값. 생략시 undefined로 간주
1.3.2. 반환값 : children이 null이거나 undefined일 땐 해당 값을 반환
  그렇지 않은 경우 fn 함수에서 반환한 노드들로 구성된 평면 배열을 반환
  반환된 배열은 null과 undefined를 제외하고 반환된 노드를 모두 포함

1.4. Children.only(children) : Children.only(children)은 children이 단일 React 엘리먼트인지 확인
1.4.1 매개변수
- children : 컴포넌트에서 받은 children prop의 값
1.4.2. 반환값 : children이 유효한 엘리먼트라면 그 엘리먼트를 반환
  그렇지 않다면, 에러를 throw

1.5. Children.toArray(children) : children 데이터 구조로부터 배열을 생성
1.5.1. 매개변수
- children : 컴포넌트에서 받은 children prop의 값
1.5.2. 반환값 : children에 속한 엘리먼트를 평면 배열로 반환

2. 사용법
import { Children } from 'react';
