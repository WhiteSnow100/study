1-1. React 배경
- UI의 복잡성을 줄이고, 효율적인 인터페이스 개발을 위해 Facebook에서 개발한 라이브러리
- 상태에 따라 자주 업데이트되는 대규모 애플리케이션을 쉽게 관리할 수 있도록 설게

1-1-1. UI 복잡성 증가
1-1-2. 데이터 흐름 관리의 어려움
1-1-3. 효율적인 DOM관리의 필요성
1-1-4. 재사용 가능한 컴포넌트 기반 개발 필요
1-1-5. 모바일과 웹의 일관된 코드베이스 요구

1-2. React의 핵심 특징
- 컴포넌트 기반 구조, Virtual DOM, 단방향 데이터 흐름

1-3. React 대안
1-3-1. Vue.js : 가볍고 배우기 쉬운 프레임워크로, React와 유사한 컴포넌트 기반의 UI개발 방식 제공
1-3-1-1. 특징
- 반응형 시스템으로 컴포넌트이 상태가 자동으로 추적 및 업데이트됨
- 문법이 직관적이고, HTML 탬플릿을 이요해 기존 HTML/CSS/JS와  쉽게 통합 가능
- 작고 가벼운 애플리케이션에 적합하며, 확장성과 성능도 뛰어남.
1-3-1-2. 적합한 경우 : 중소규모의 프레적트, 빠르게 구축해야 하는 애플리케이션, 배우기 쉬운 UI프레임워크가 필요한 경우 

1-3-2. Angular : 구글에서 개발한 강력한 웹 애플리케이션 프레임춰크로 대규모 애플리케이션 개발에 적합
1-3-2-1. 특징
- MVC패턴을 기반으로 하며 프레임워크 자체가 모든 기능을 제공해 일관성 있게 관리 가능
- 양방향 데이터 바인딩과 의존성 주입을 제공하여 복잡한 애플리케이션의 데이터 관리를 쉽게 함
- 타임스크립트를 기본으로 사용하여 타입 안정성과 유지보수가 용이
1-3-2-2. 적합한 경우 : 대규모 애플리케이션, 복잡한 비즈니스 로직을 처리해야 하는 프로젝트, 강력한 프레임워크가 필요한 경우

1-3-3. Svelte : UI구성 요소를 컴파일하여 가벼운 애플리케이션을 만드는 데 초점을 맞춘 프레임워크
1-3-3-1. 특징
- 컴파일 타임에 코드를 변환하여 가상 DOM이 아닌 실제 DOM을 직접 조작하여 성능이 매우 뛰어남
- 상태 관리와 반응성 시스템을 컴포넌트에 기본으로 내장
- React와 Vue보다 간경한 코드 작성 가능하며, 배운 후 바로 적용하기 쉽도록 설계됨
1-3-3-2. 적합한 경우 : 성능이 중요한 프로젝트, 초기 로드 타임이 중요한 애플리케이션, 간결한 코드를 원하는 경우

1-3-4. Solid.js : 고성능 UI 프레임워크로, React와 유사한 사용 경험을 제공하면서 더 높은 성능을 지향
1-3-4-1. 특징
- 컴파일 단계에서 DOM업데이트를 최적화하여 React보다 더 빠른 랜더링 성능 제공
- 반응형 시스템을 채택하여 상태가 변경될 때 필요한 부분만 선택적으로 업데이트
- React와 매우 유사한 구조와 문법을 제공해 React 사용자가 쉽게 적응 가능
1-3-4-2. 적합한 경우 : 높은 성능 이 요구되는 애플리케이션, 반응형 업데이트가 필요한 UI, React사용 경험이 있는 경우

1-3-5. Preact : Preact는 React와 매우 유사한 구조를 가지고 있지만 크기가 매우 작은 경량 라이브러리
1-3-5-1. 특징
- React와 API 호환성이 높아 React코드 대부분을 그대로 사용할 수 있음
- 파일 크기가 작아, 특히 성능이 중요한 모바일 환경에서 유리함
- 작은 애플리케이션이나 빠른 로드 타임이 필요한 웹사이트에서 유용
1-3-5-2. 적합한 경우 : 작은 애플리케이션, 모바일 환경, React프로젝트의 경량화가 필요한 경우

1-3-6. Lit : 구글이 개발한 웹 컴포넌트 기반의 경량 프레임워크로 웹 표준을 준수하며 독립적인 컴포넌트를 쉽게 작성할 수 있도록 돕습니다.
1-2-6-1. 특징
- 컴포넌트를 웹 표준(Web Components)으로 제작하여, 다양한 프레임워크에서 재사용 가능
- 빠른 랜더링 성능을 자랑하며, HTML 템플릿을 사용해 직관적으로 UI를 설계할 수 있음
1-3-6-2. 적합한 경우 : 웹 표준을 준수하고 프레임워크와 독립적으로 동작해야 하는 애플리케이션, 컴포넌트 재사용이 중요한 프로젝트

=======================================
npx create-react-app <your-project-name>
JSX : JavaScript and XML